{"version":3,"sources":["actions/constants.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/HomePage/index.js","actions/user.actions.js","components/UI/Card/index.js","containers/LoginPage/index.js","containers/RegisterPage/index.js","components/PrivateRoute.js","App.js","reportWebVitals.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["authConstanst","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","to","color","authenticated","margin","fontWeight","firstName","lastName","onClick","uid","a","type","firebase","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","payload","Layout","children","User","user","src","alt","flex","justifyContent","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","getRealtimeConversations","length","map","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","firstname","setFirstname","lastname","setLastname","createUserWithEmailAndPassword","currentuser","currentUser","updateProfile","set","signup","PrivateRoute","Component","component","rest","getItem","parse","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authenticating","intiState","rootReducer","combineReducers","action","store","createStore","RootReducer","applyMiddleware","thunk","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c0851da.chunk.js","sourcesContent":["export const authConstanst = {\r\n    USER_LOGIN: 'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\nexport const userConstants = {\r\n    GET_REALTIME_USERS: 'GET_REALTIME_USERS',\r\n    GET_REALTIME_MESSAGES: 'GET_REALTIME_MESSAGES'\r\n}","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../actions';\r\n\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n \r\n\r\n  return(\r\n    <header className=\"header\">\r\n        <div style={{display: 'flex'}}>\r\n          <div className=\"logo\"><Link to={'/'} style={{color:'#fff'}}>Web Messenger</Link></div>\r\n            \r\n            {\r\n              !auth.authenticated ? \r\n              <ul className=\"leftMenu\">\r\n                <li><NavLink to={'/login'}>Login</NavLink></li>\r\n                <li><NavLink to={'/signup'}>Sign up</NavLink></li>\r\n              </ul> : null\r\n            }\r\n              \r\n\r\n            \r\n        </div>\r\n          <div style={{margin: '20px 0', color: '#fff', fontWeight: 'bold'}}>\r\n            {auth.authenticated ? `Hi ${auth.firstName} ${auth.lastName}` : ''}\r\n          </div>\r\n        <ul className=\"menu\">\r\n\r\n            {\r\n              auth.authenticated ?\r\n              <li>\r\n                <Link to={'#'} onClick={() => {\r\n                  dispatch(logout(auth.uid))\r\n                }}>Logout</Link>\r\n            </li> : null\r\n            }\r\n          \r\n            \r\n             \r\n        </ul>\r\n    </header>\r\n   )\r\n\r\n }\r\n\r\nexport default Header","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { authConstanst } from './constants';\r\n\r\nexport const signup=(user)=>{\r\n    return async(dispatch)=>{\r\n        const db = firebase.firestore();\r\n        dispatch({type: `${authConstanst.USER_LOGIN}_REQUEST`});\r\n\r\n        firebase.auth()\r\n        .createUserWithEmailAndPassword(user.email,user.password)\r\n        .then(data=>{\r\n            console.log(data);\r\n            const currentuser = firebase.auth().currentUser;\r\n            const name = `${user.firstname} ${user.lastname}`;\r\n            currentuser.updateProfile({\r\n                displayName: name\r\n            })\r\n            .then(()=>{\r\n                // success\r\n                db.collection('users')\r\n                .doc(data.user.uid)\r\n                .set({\r\n                    firstName: user.firstname,\r\n                    lastName: user.lastname,\r\n                    uid: data.user.uid,\r\n                    createdAt: new Date(),\r\n                    isOnline:true\r\n                })\r\n                .then(()=>{\r\n                    // success\r\n                    const loggedInUser = {\r\n                        firstName: user.firstname,\r\n                        lastName: user.lastname,\r\n                        uid: data.user.uid,\r\n                        email: user.email\r\n                    }\r\n                    localStorage.setItem('user',JSON.stringify(loggedInUser))\r\n                    console.log('user logged in successfully');\r\n                    dispatch({\r\n                        type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                        payload: { user: loggedInUser }\r\n                    })\r\n                })\r\n                .catch(error=>{\r\n                    console.log(error);\r\n                    dispatch({ \r\n                        type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                        payload: { error }\r\n                      });\r\n                })\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport const signin = (user)=>{\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: `${authConstanst.USER_LOGIN}_REQUEST` });\r\n        firebase.auth()\r\n        \r\n        .signInWithEmailAndPassword(user.email, user.password)\r\n        .then((data) => {\r\n            console.log(data);\r\n\r\n\r\n            const db = firebase.firestore();\r\n            db.collection('users')\r\n            .doc(data.user.uid)\r\n            .update({\r\n                isOnline: true\r\n            })\r\n            .then(() => {\r\n                const name = data.user.displayName.split(\" \");\r\n                const firstName = name[0];\r\n                const lastName = name[1];\r\n\r\n                const loggedInUser = {\r\n                    firstName,\r\n                    lastName,\r\n                    uid: data.user.uid,\r\n                    email: data.user.email\r\n                }\r\n\r\n                localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n\r\n                dispatch({\r\n                    type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                    payload: { user: loggedInUser }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n            \r\n\r\n\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                payload: { error }\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const isLoggedInUser = () => {\r\n    return async dispatch => {\r\n\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if(user){\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_SUCCESS`,\r\n                payload: { user }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\r\n                payload: { error: 'Login again please' }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const logout=(uid)=>{\r\n    return async dispatch =>{\r\n        dispatch({type:`${authConstanst.USER_LOGOUT}_REQUEST`});\r\n\r\n        const db = firebase.firestore();\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .update({\r\n            isOnline:false\r\n        })\r\n        .then(()=>{\r\n            // logout user\r\n            firebase.auth()\r\n            .signOut()\r\n            .then(()=>{\r\n                localStorage.clear();\r\n                dispatch({type: `${authConstanst.USER_LOGOUT}_SUCCESS`})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                dispatch({type: `${authConstanst.USER_LOGOUT}_FAILURE`,payload:{error}})\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport Header from '../Header'\r\n\r\nexport default function Layout(props) {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect,useState } from \"react\";\r\nimport \"./style.css\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations } from '../../actions';\r\n\r\n\r\nconst User = (props) => {\r\n  const {user,onClick} = props;\r\n\r\n  return (\r\n    <div onClick={()=>onClick(user)} className=\"displayName\">\r\n      <div className=\"displayPic\">\r\n        <img\r\n          src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n                      <span style={{fontWeight: 500}}>{user.firstName} {user.lastName}</span>\r\n                      <span className={user.isOnline ? `onlineStatus` : `onlineStatus off`}></span>\r\n                  </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const user = useSelector((state) => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n      .then((unsubscribe) => {\r\n        return unsubscribe;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //componentWillUnmount\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup\r\n      unsubscribe.then((f) => f()).catch((error) => console.log(error));\r\n    };\r\n  }, []);\r\n\r\n\r\n  // start the chat\r\n  const initChat = (user) => {\r\n\r\n    setChatStarted(true)\r\n    setChatUser(`${user.firstName} ${user.lastName}`)\r\n    setUserUid(user.uid);\r\n\r\n    console.log(user);\r\n\r\n    dispatch(getRealtimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n\r\n  }\r\n\r\n  const submitMessage = (e) => {\r\n\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message\r\n    }\r\n\r\n\r\n    if(message !== \"\"){\r\n      dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('')\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n        <div className=\"listOfUsers\">\r\n          {user.users.length > 0\r\n            ? user.users.map((user) => {\r\n                return <User onClick={initChat} key={user.uid} user={user} />;\r\n              })\r\n            : null}\r\n        </div>\r\n        <div className=\"chatArea\">\r\n        <div className=\"chatHeader\"> \r\n            {\r\n              chatStarted ? chatUser : ''\r\n            }\r\n            </div>\r\n          <div className=\"messageSections\">\r\n          {\r\n                  chatStarted ? \r\n                  user.conversations.map(con =>\r\n                    <div style={{ textAlign: con.user_uid_1 == auth.uid ? 'right' : 'left' }} className={ con.user_uid_1 == auth.uid ? 'right' : 'left' }>\r\n                    <p className=\"messageStyle\" >{con.message}</p>\r\n                  </div> )\r\n                  : null\r\n                }\r\n          </div>\r\n          {\r\n              chatStarted ? \r\n              <div className=\"chatControls\">\r\n                <textarea \r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Write Message\"\r\n                />\r\n                <button onClick={submitMessage}>Send</button>\r\n            </div> : null\r\n            }\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { userConstants } from \"./constants\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nexport const getRealtimeUsers = (uid) => {\r\n\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n\r\n        const db = firebase.firestore();\r\n        const unsubscribe = db.collection(\"users\")\r\n        .onSnapshot((querySnapshot) => {\r\n            const users = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid != uid){\r\n                    users.push(doc.data());\r\n                }\r\n            });\r\n            \r\n\r\n            dispatch({ \r\n                type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n                payload: { users }\r\n            });\r\n\r\n        });\r\n\r\n        return unsubscribe;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const updateMessage = (msgObj) => {\r\n    return async dispatch => {\r\n\r\n        const db = firebase.firestore();\r\n        db.collection('conversations')\r\n        .add({\r\n            ...msgObj,\r\n            isView: false,\r\n            createdAt: new Date()\r\n        })\r\n        .then((data) => {\r\n            console.log(data)\r\n            \r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const getRealtimeConversations = (user) => {\r\n    return async dispatch => {\r\n\r\n        const db = firebase.firestore();\r\n        db.collection('conversations')\r\n        .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot((querySnapshot) => {\r\n\r\n            const conversations = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n\r\n                if(\r\n                    (doc.data().user_uid_1 == user.uid_1 && doc.data().user_uid_2 == user.uid_2)\r\n                    || \r\n                    (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)\r\n                ){\r\n                    conversations.push(doc.data())\r\n                }\r\n\r\n                \r\n\r\n\r\n                \r\n            });\r\n\r\n            dispatch({\r\n                type: userConstants.GET_REALTIME_MESSAGES,\r\n                payload: { conversations }\r\n            })\r\n\r\n            console.log(conversations);\r\n        })\r\n        \r\n\r\n    }\r\n}","import React from 'react';\r\nimport './style.css';\r\n\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Layout from '../../components/Layout';\r\nimport Card from '../../components/UI/Card';\r\nimport { signin } from '../../actions';\r\nimport './style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function LoginPage\r\n**/\r\n\r\nconst LoginPage = (props) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  // useEffect(() => {\r\n  //   if(!auth.authenticated){\r\n  //     dispatch(isLoggedInUser())\r\n  //   }\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(email == \"\"){\r\n      alert(\"Email is required\");\r\n      return;\r\n    }\r\n    if(password == \"\"){\r\n      alert(\"Password is required\");\r\n      return;\r\n    }\r\n\r\n    dispatch(signin({ email, password }));\r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <Layout>\r\n      <div className=\"loginContainer\">\r\n        <Card>\r\n          <form onSubmit={userLogin}>\r\n            \r\n            <input \r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input \r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n\r\n            <div>\r\n              <button>Login</button>\r\n            </div>\r\n\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default LoginPage","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport {signup} from '../../actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport \"./style.css\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function RegisterPage() {\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n\r\n  function registerUser(e){\r\n    e.preventDefault();\r\n    const user = {\r\n      firstname,lastname,email,password\r\n    }\r\n    dispatch(signup(user));\r\n  }\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"registerContainer\">\r\n        <Card>\r\n          <form onSubmit={registerUser}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Firstname\"\r\n              value={firstname}\r\n              onChange={(e) => setFirstname(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Lastname\"\r\n              value={lastname}\r\n              onChange={(e) => setLastname(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <input type=\"submit\" value=\"Sign up\" />\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n  return(\r\n    <Route {...rest} component={(props) => {\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if(user){\r\n            return <Component {...props} />\r\n        }else{\r\n            return <Redirect to={`/login`} />\r\n        }\r\n\r\n    }} />\r\n   )\r\n\r\n }\r\n\r\nexport default PrivateRoute","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './containers/HomePage';\nimport LoginPage from './containers/LoginPage';\nimport RegisterPage from './containers/RegisterPage';\nimport PrivateRoute from './components/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLoggedInUser } from './actions';\n\nfunction App() {\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(!auth.authenticated){\n      dispatch(isLoggedInUser())\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n      {/* only logged in user can access this home route */}\n        <PrivateRoute exact path = '/' component={HomePage}/>\n        <Route path = '/login' component={LoginPage}></Route>\n        <Route path = '/signup' component={RegisterPage}></Route>\n      </Router>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { authConstanst } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n\r\n        case `${authConstanst.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated: false,\r\n                authenticating: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_SUCCESS`:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n\r\n    return state;\r\n}","import { userConstants } from \"../actions/constants\"\r\n\r\nconst intiState = {\r\n    users: [],\r\n    conversations: []\r\n}\r\n\r\nexport default (state = intiState, action) => {\r\n\r\n    switch(action.type){\r\n        case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n            break;\r\n        case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n            break;\r\n        case userConstants.GET_REALTIME_MESSAGES:\r\n            state = {\r\n                ...state,\r\n                conversations: action.payload.conversations\r\n            }\r\n            break;\r\n        case `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                conversations: []\r\n            }\r\n            break;\r\n        \r\n    }\r\n\r\n\r\n    return state;\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth.reducer';\r\nimport userReducer from './user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport RootReducer from '../reducers';\r\n\r\nconst store = new createStore(RootReducer,applyMiddleware(thunk));\r\n// createStore takes a reducer function\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase/app\";\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB3_XFxGj_RMXwUANBvac33m5miJD0OGnc\",\n  authDomain: \"web-messenger-29894.firebaseapp.com\",\n  projectId: \"web-messenger-29894\",\n  storageBucket: \"web-messenger-29894.appspot.com\",\n  messagingSenderId: \"966043581478\",\n  appId: \"1:966043581478:web:2107b51d1d11f04d837ae7\",\n  measurementId: \"G-C13B1W1K0F\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}